name: projeto-redes

services:
  db:
    image: postgres:16.8-alpine3.20
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: redes
    volumes:
      - /var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - frontend

  app1:
    build: ./app
    restart: always
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/redes
      NEXT_PUBLIC_INSTANCE_NAME: app1
    depends_on:
      - db
    networks:
      - frontend

  app2:
    build: ./app
    restart: always
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/redes
      NEXT_PUBLIC_INSTANCE_NAME: app2
    depends_on:
      - db
    networks:
      - frontend

  app3:
    build: ./app
    restart: always
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/redes
      NEXT_PUBLIC_INSTANCE_NAME: app3
    depends_on:
      - db
    networks:
      - frontend
  
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
      - app3
    networks:
      - frontend

  openvpn:
    image: kylemanna/openvpn
    container_name: openvpn
    cap_add:
      - NET_ADMIN
    ports:
      - "1194:1194/udp"
    volumes:
      - openvpn-data:/etc/openvpn
    environment:
      - DEBUG=1
    restart: always
    networks:
      - frontend

volumes:
  pgdata:
  openvpn-data:

networks:
  frontend:
    driver: bridge
