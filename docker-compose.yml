name: projeto-redes

services:
  db:
    image: postgres:16.8-alpine3.20
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: redes
    volumes:
      - /var/lib/postgresql/data
      - ./app/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      frontend:

  app1:
    build: ./app
    restart: always
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/redes
      NEXT_PUBLIC_INSTANCE_NAME: app1
    depends_on:
      - db
    networks:
      frontend:

  app2:
    build: ./app
    restart: always
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/redes
      NEXT_PUBLIC_INSTANCE_NAME: app2
    depends_on:
      - db
    networks:
      frontend:

  app3:
    build: ./app
    restart: always
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/redes
      NEXT_PUBLIC_INSTANCE_NAME: app3
    depends_on:
      - db
    networks:
      frontend:
  
  nginx:
    image: nginx:latest
    ports:
      - "3000:3000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
      - app3
    networks:
      frontend:
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prom_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      frontend:

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "4000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      frontend:

  node_exporter:
    container_name: node_exporter
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    command:
      - '--path.rootfs=/host'
    pid: host
    volumes:
      - '/:/host:ro'
    networks:
      frontend:

volumes:
  pgdata:

networks:
  frontend:
    driver: bridge
